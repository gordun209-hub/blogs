{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../../services/blogs';\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    addBlog: (state, action) => {\n      state.push(action.payload);\n    },\n    setBlogs: (state, action) => {\n      return action.payload;\n    },\n    deleteBlog: (state, action) => {\n      state.splice(action.payload, 1);\n    }\n  }\n});\nexport const initializeBlogs = () => async dispatch => {\n  const blogs = await blogService.getAll();\n  dispatch(setBlogs(blogs));\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content);\n    dispatch(addBlog(blog));\n  };\n};\nexport const deleteBlogbyId = async id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch(deleteBlog(id));\n  };\n};\nexport const {\n  addBlog,\n  setBlogs,\n  deleteBlog\n} = blogsSlice.actions;\nexport default blogsSlice.reducer;","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/Features/Blogs/blogsSlice.js"],"names":["createSlice","blogService","blogsSlice","name","initialState","reducers","addBlog","state","action","push","payload","setBlogs","deleteBlog","splice","initializeBlogs","dispatch","blogs","getAll","createBlog","content","blog","create","deleteBlogbyId","id","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAC,OADwB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACtBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,KAHM;AAIPC,IAAAA,QAAQ,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AACvB,aAAOA,MAAM,CAACE,OAAd;AACD,KANM;AAOPE,IAAAA,UAAU,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACzBD,MAAAA,KAAK,CAACM,MAAN,CAAaL,MAAM,CAACE,OAApB,EAA4B,CAA5B;AACD;AATM;AAHoB,CAAD,CAA9B;AAgBA,OAAO,MAAMI,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAiB;AACpD,QAAMC,KAAK,GAAG,MAAMf,WAAW,CAACgB,MAAZ,EAApB;AACAF,EAAAA,QAAQ,CAACJ,QAAQ,CAACK,KAAD,CAAT,CAAR;AACD,CAHM;AAIP,OAAO,MAAME,UAAU,GAAGC,OAAO,IAAI;AACnC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,IAAI,GAAG,MAAMnB,WAAW,CAACoB,MAAZ,CAAmBF,OAAnB,CAAnB;AACAJ,IAAAA,QAAQ,CAACT,OAAO,CAACc,IAAD,CAAR,CAAR;AACD,GAHD;AAID,CALM;AAMP,OAAO,MAAME,cAAc,GAAG,MAAMC,EAAN,IAAY;AACxC,SAAO,MAAMR,QAAN,IAAkB;AACvB,UAAMd,WAAW,CAACW,UAAZ,CAAuBW,EAAvB,CAAN;AACAR,IAAAA,QAAQ,CAACH,UAAU,CAACW,EAAD,CAAX,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAM;AAACjB,EAAAA,OAAD;AAASK,EAAAA,QAAT;AAAkBC,EAAAA;AAAlB,IAAgCV,UAAU,CAACsB,OAAjD;AACP,eAAetB,UAAU,CAACuB,OAA1B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport blogService from '../../services/blogs';\nconst blogsSlice = createSlice({\n  name:'blogs',\n  initialState: [],\n  reducers:{\n    addBlog:(state,action)=>{\n      state.push(action.payload);\n    },\n    setBlogs:(state,action)=>{\n      return action.payload\n    },\n    deleteBlog:(state,action)=>{\n      state.splice(action.payload,1);\n    },\n  }\n})\n\nexport const initializeBlogs = () => async dispatch =>{\n  const blogs = await blogService.getAll();\n  dispatch(setBlogs(blogs));\n}\nexport const createBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content);\n    dispatch(addBlog(blog));\n  }\n}\nexport const deleteBlogbyId = async id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch(deleteBlog(id));\n  }\n}\n\nexport const {addBlog,setBlogs,deleteBlog} = blogsSlice.actions;\nexport default blogsSlice.reducer;"]},"metadata":{},"sourceType":"module"}
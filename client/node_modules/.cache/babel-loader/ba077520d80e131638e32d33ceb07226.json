{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Togglable from './components/Togglable';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport BlogForm from './components/BlogForm';\nimport loginService from './services/login.js';\nimport LoginForm from './components/loginform';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createBlog, deleteBlog, initializeBlogs } from './Features/Blogs/blogsSlice';\nimport { initializeUsers } from './Features/Users/usersSlice';\nimport { loginSuccess, logout } from './Features/Users/authUserSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const blogs = useSelector(state => state.blogs);\n  const users = useSelector(state => state.users);\n  const usersss = useSelector(state => state.authUser.user);\n  console.log(usersss);\n\n  const addBlog = blog => {\n    dispatch(createBlog(blog));\n  }; //---------------------------hooks---------------- //\n\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null); //fetching blogs\n\n  console.log(user && user);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n    dispatch(initializeUsers());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, [dispatch]); // ----------------------------------------------------------------//\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      dispatch(loginSuccess(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      console.log(err);\n    }\n  }; // LOGINFORM\n\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"log in\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this); // BLOGFORM// lopgut\n\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new blog\",\n    children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        setUser(null);\n        localStorage.clear();\n        dispatch(logout());\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      class: 'w3-highway-schoolbus'\n    },\n    children: user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), blogForm(), ' ', blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MoWyA9G9tLpqiwRQJpoWIN4Kk9Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js"],"names":["React","useEffect","useState","Togglable","Blog","blogService","BlogForm","loginService","LoginForm","Button","useSelector","useDispatch","createBlog","deleteBlog","initializeBlogs","initializeUsers","loginSuccess","logout","App","dispatch","blogs","state","users","usersss","authUser","user","console","log","addBlog","blog","username","setUsername","password","setPassword","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","e","preventDefault","login","setToken","token","setItem","stringify","err","loginForm","target","value","blogForm","clear","class","display","name","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,eAHF,QAIO,6BAJP;AAKA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,gCAArC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,KAAK,GAAGZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAzB;AACA,QAAMC,OAAO,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeC,IAAzB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,QAAMK,OAAO,GAAGC,IAAI,IAAI;AACtBV,IAAAA,QAAQ,CAACP,UAAU,CAACiB,IAAD,CAAX,CAAR;AACD,GAFD,CANgB,CAShB;;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,IAAD,EAAOS,OAAP,IAAkBhC,QAAQ,CAAC,IAAD,CAAhC,CAZgB,CAahB;;AACAwB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,IAAIA,IAApB;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACAK,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD,GAHQ,EAGN,CAACI,QAAD,CAHM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMV,IAAI,GAAGc,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAD,MAAAA,OAAO,CAACT,IAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACN,QAAD,CANM,CAAT,CApBgB,CA2BhB;;AACA,QAAMsB,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMlB,IAAI,GAAG,MAAMlB,YAAY,CAACqC,KAAb,CAAmB;AACpCd,QAAAA,QADoC;AAEpCE,QAAAA;AAFoC,OAAnB,CAAnB;AAIA3B,MAAAA,WAAW,CAACwC,QAAZ,CAAqBpB,IAAI,CAACqB,KAA1B;AACAV,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,mBAA5B,EAAiDR,IAAI,CAACS,SAAL,CAAevB,IAAf,CAAjD;AACAN,MAAAA,QAAQ,CAACH,YAAY,CAACS,IAAD,CAAb,CAAR;AACAS,MAAAA,OAAO,CAACT,IAAD,CAAP;AACAM,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAXD,CAWE,OAAOgB,GAAP,EAAY;AACZvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AACD;AACF,GAhBD,CA5BgB,CA6ChB;;;AACA,QAAMC,SAAS,GAAG,mBAChB,QAAC,SAAD;AAAW,IAAA,WAAW,EAAC,QAAvB;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAEpB,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAE,CAAC;AAAEmB,QAAAA;AAAF,OAAD,KAAgBpB,WAAW,CAACoB,MAAM,CAACC,KAAR,CAHnD;AAIE,MAAA,oBAAoB,EAAE,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAgBlB,WAAW,CAACkB,MAAM,CAACC,KAAR,CAJnD;AAKE,MAAA,YAAY,EAAEX;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CA9CgB,CAyDhB;;;AACA,QAAMY,QAAQ,GAAG,mBACf,QAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEzB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV;AAEE,MAAA,OAAO,EAAE,MAAM;AACbM,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,QAAAA,YAAY,CAACiB,KAAb;AACAnC,QAAAA,QAAQ,CAACF,MAAM,EAAP,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAgBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEsC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA,cACG9B,IAAI,KAAK,IAAT,GACCyB,SAAS,EADV,gBAGC;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,+BACE;AAAA,qBAAI/B,IAAI,CAACgC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGJ,QAAQ,EAJX,EAIe,GAJf,EAKGjC,KAAK,CAACsC,GAAN,CAAU7B,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAAC8B,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3FD;;GAAMzC,G;UACaP,W,EACHD,W,EACAA,W,EACEA,W;;;KAJZQ,G;AA6FN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Togglable from './components/Togglable'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login.js'\nimport LoginForm from './components/loginform'\nimport { Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  createBlog,\n  deleteBlog,\n  initializeBlogs,\n} from './Features/Blogs/blogsSlice'\nimport { initializeUsers } from './Features/Users/usersSlice'\nimport { loginSuccess, logout } from './Features/Users/authUserSlice'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const blogs = useSelector(state => state.blogs)\n  const users = useSelector(state => state.users)\n  const usersss = useSelector(state => state.authUser.user)\n  console.log(usersss)\n  const addBlog = blog => {\n    dispatch(createBlog(blog))\n  }\n  //---------------------------hooks---------------- //\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //fetching blogs\n  console.log(user && user)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n  }, [dispatch])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [dispatch])\n  // ----------------------------------------------------------------//\n  const handleLogin = async e => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      dispatch(loginSuccess(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  // LOGINFORM\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n  // BLOGFORM// lopgut\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new blog\">\n      <BlogForm createBlog={addBlog} />\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n          setUser(null)\n          localStorage.clear()\n          dispatch(logout())\n        }}\n      >\n        Logout\n      </Button>\n    </Togglable>\n  )\n\n  return (\n    <div style={{ class: 'w3-highway-schoolbus' }}>\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <div style={{ display: 'flex' }}>\n            <p>{user.name} logged in</p>\n          </div>\n          {blogForm()}{' '}\n          {blogs.map(blog => (\n            <Blog key={blog.id} blog={blog} />\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
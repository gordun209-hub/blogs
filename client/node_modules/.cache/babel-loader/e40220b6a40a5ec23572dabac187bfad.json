{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Togglable from './components/Togglable';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport BlogForm from './components/BlogForm';\nimport loginService from './services/login.js';\nimport LoginForm from './components/loginform';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { initializeBlogs } from './Features/Blogs/blogsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const addBlog = blog => {\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n    });\n  }; //---------------------------hooks---------------- //\n\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null); //fetching blogs\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []); // ----------------------------------------------------------------//\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      console.log(err);\n    }\n  }; // LOGINFORM\n\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"log in\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this); // BLOGFORM\n\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new blog\",\n    children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        setUser(null);\n        localStorage.clear();\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      class: 'w3-highway-schoolbus'\n    },\n    children: [user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), blogForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4qihdVSilXDdf6wHhBK+ujEZ3f8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js"],"names":["React","useEffect","useState","Togglable","Blog","blogService","BlogForm","loginService","LoginForm","Button","useSelector","useDispatch","initializeBlogs","App","dispatch","addBlog","blog","create","then","returnedBlog","setBlogs","blogs","concat","username","setUsername","password","setPassword","user","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","e","preventDefault","login","setItem","stringify","err","console","log","loginForm","target","value","blogForm","clear","class","display","name","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Togglable from './components/Togglable'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login.js'\nimport LoginForm from './components/loginform'\nimport { Button } from 'react-bootstrap'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { initializeBlogs } from './Features/Blogs/blogsSlice'\n\nconst App = () => {\nconst dispatch = useDispatch()\n  const addBlog = blog => {\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n    })\n  }\n  //---------------------------hooks---------------- //\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //fetching blogs\n  useEffect(() => {\n    dispatch(initializeBlogs())\n\n  }, [])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n  // ----------------------------------------------------------------//\n  const handleLogin = async e => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  // LOGINFORM\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n  // BLOGFORM\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new blog\">\n      <BlogForm createBlog={addBlog} />\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n          setUser(null)\n          localStorage.clear()\n        }}\n      >\n        Logout\n      </Button>\n    </Togglable>\n  )\n  return (\n    <div style={{ class: 'w3-highway-schoolbus' }}>\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <div style={{ display: 'flex' }}>\n            <p>{user.name} logged in</p>\n          </div>\n          {blogForm()}\n        </div>\n      )}\n      {\n        blogs.map(blog => <Blog key={blog.id} blog={blog} />)}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
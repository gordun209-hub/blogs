{"ast":null,"code":"import loginService from '../../services/login';\nimport blogService from '../../services/blogs';\nconst authUserSlice = createSlice({\n  name: 'authUser',\n  initialState: {\n    user: null,\n    error: null\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.user = null;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.error = null;\n    }\n  }\n});\nexport const initializeUser = () => {\n  const loggedUserJson = window.localStorage.getItem('loggedBlogappUser');\n\n  if (loggedUserJson) {\n    const user = JSON.parse(loggedUserJson);\n    blogService.setToken(user.token);\n    return authUserSlice.actions.loginSuccess(user);\n  }\n\n  return null;\n};\nexport const login = (username, password) => async dispatch => {\n  try {\n    const user = await loginService.login({\n      username,\n      password\n    });\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n    blogService.setToken(user.token);\n    dispatch(loginSuccess(user));\n  } catch (exception) {\n    dispatch(loginFailure(exception.response.data.error));\n  }\n};\nexport const {\n  loginSuccess,\n  loginFailure,\n  logout\n} = authUserSlice.actions;\nexport default authUserSlice.reducer;","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/Features/Users/authUserSlice.js"],"names":["loginService","blogService","authUserSlice","createSlice","name","initialState","user","error","reducers","loginSuccess","state","action","payload","loginFailure","logout","initializeUser","loggedUserJson","window","localStorage","getItem","JSON","parse","setToken","token","actions","login","username","password","dispatch","setItem","stringify","exception","response","data","reducer"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,MAAMC,aAAa,GAAGC,WAAW,CAAC;AAChCC,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,IADM;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFkB;AAMhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAJO;AAKRM,IAAAA,YAAY,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,IAAN,GAAa,IAAb;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACD,KARO;AASRE,IAAAA,MAAM,EAAGJ,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACJ,IAAN,GAAa,IAAb;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD;AAZO;AANsB,CAAD,CAAjC;AAwBA,OAAO,MAAMQ,cAAc,GAAG,MAAM;AAClC,QAAMC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,MAAIH,cAAJ,EAAoB;AAClB,UAAMV,IAAI,GAAGc,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAf,IAAAA,WAAW,CAACqB,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACA,WAAOrB,aAAa,CAACsB,OAAd,CAAsBf,YAAtB,CAAmCH,IAAnC,CAAP;AACD;;AACD,SAAO,IAAP;AACD,CARM;AASP,OAAO,MAAMmB,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACF,UAAMtB,IAAI,GAAG,MAAMN,YAAY,CAACyB,KAAb,CAAmB;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAnB,CAAnB;AACAV,IAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4B,mBAA5B,EAAiDT,IAAI,CAACU,SAAL,CAAexB,IAAf,CAAjD;AACAL,IAAAA,WAAW,CAACqB,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACAK,IAAAA,QAAQ,CAACnB,YAAY,CAACH,IAAD,CAAb,CAAR;AACD,GALD,CAKE,OAAOyB,SAAP,EAAkB;AAClBH,IAAAA,QAAQ,CAACf,YAAY,CAACkB,SAAS,CAACC,QAAV,CAAmBC,IAAnB,CAAwB1B,KAAzB,CAAb,CAAR;AACD;AACF,CATM;AAUP,OAAO,MAAM;AAAEE,EAAAA,YAAF;AAAgBI,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,IAAyCZ,aAAa,CAACsB,OAA7D;AACP,eAAetB,aAAa,CAACgC,OAA7B","sourcesContent":["import loginService from '../../services/login'\nimport blogService from '../../services/blogs'\n\nconst authUserSlice = createSlice({\n  name: 'authUser',\n  initialState: {\n    user: null,\n    error: null,\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload\n      state.error = null\n    },\n    loginFailure: (state, action) => {\n      state.user = null\n      state.error = action.payload\n    },\n    logout: (state) => {\n      state.user = null\n      state.error = null\n    },\n  },\n\n\n})\n\nexport const initializeUser = () => {\n  const loggedUserJson = window.localStorage.getItem('loggedBlogappUser')\n  if (loggedUserJson) {\n    const user = JSON.parse(loggedUserJson)\n    blogService.setToken(user.token)\n    return authUserSlice.actions.loginSuccess(user)\n  }\n  return null\n}\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    const user = await loginService.login({ username, password })\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n    blogService.setToken(user.token)\n    dispatch(loginSuccess(user))\n  } catch (exception) {\n    dispatch(loginFailure(exception.response.data.error))\n  }\n}\nexport const { loginSuccess, loginFailure, logout } = authUserSlice.actions\nexport default authUserSlice.reducer"]},"metadata":{},"sourceType":"module"}
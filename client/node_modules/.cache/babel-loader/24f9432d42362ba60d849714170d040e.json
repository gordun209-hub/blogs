{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/components/Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const users = useSelector(state => state.users);\n  const userBlogs = users.map(user => user.blogs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [user.username, \" has posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"sx/aBQadEi3Xj/gxEkh8kVHzHlA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/components/Users.js"],"names":["React","useSelector","Users","users","state","userBlogs","map","user","blogs","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,SAAS,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,KAAvB,CAAlB;AAEA,sBACE;AAAA,cACGL,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACjB,0BACE;AAAA,+BACE;AAAA,qBAAMA,IAAI,CAACE,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAfD;;GAAMP,K;UACUD,W;;;KADVC,K;AAiBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Users = () => {\n  const users = useSelector(state => state.users)\n  const userBlogs = users.map(user => user.blogs)\n\n  return (\n    <div>\n      {users.map(user => {\n        return (\n          <>\n            <div>{user.username} has posts</div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}
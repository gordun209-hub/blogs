{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { handle } from 'express/lib/application';\nimport React, { useEffect, useState } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  const handleAuthorChange = e => {\n    setNewAuthor(e.target.value);\n  };\n\n  const handleUrlChange = e => {\n    setNewUrl(e.target.value);\n  };\n\n  const BlogForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addBlog,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTitle,\n      onChange: handleTitleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: author,\n      onChange: handleAuthorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: url,\n      onChange: handleUrlChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.username, \" logged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  const addBlog = e => {\n    e.preventDefault();\n    const blog = {\n      title: newTitle,\n      url: url,\n      author: author\n    };\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setNewTitle('');\n    });\n  };\n\n  const handleTitleChange = e => {\n    console.log(e.target.value);\n    setNewTitle(e.target.value);\n  }; //hooks\n\n\n  const [blogs, setBlogs] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [author, setNewAuthor] = useState('');\n  const [url, setNewUrl] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  });\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), user === null && loginForm(), user !== null && BlogForm(), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GxydwT1K4P0F+GLTzerHbndvaZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js"],"names":["handle","React","useEffect","useState","Blog","blogService","loginService","App","loginForm","handleLogin","username","target","setUsername","value","password","setPassword","handleAuthorChange","e","setNewAuthor","handleUrlChange","setNewUrl","BlogForm","addBlog","newTitle","handleTitleChange","author","url","user","preventDefault","blog","title","create","then","returnedBlog","setBlogs","blogs","concat","setNewTitle","console","log","setUser","getAll","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","login","setItem","stringify","err","map","id"],"mappings":"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","sourcesContent":["import { handle } from 'express/lib/application'\nimport React, { useEffect, useState } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login.js'\nconst App = () => {\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n  const handleAuthorChange = e => {\n    setNewAuthor(e.target.value)\n  }\n  const handleUrlChange = e => {\n    setNewUrl(e.target.value)\n  }\n  const BlogForm = () => (\n    <form onSubmit={addBlog}>\n      <input value={newTitle} onChange={handleTitleChange} />\n      <input value={author} onChange={handleAuthorChange} />\n      <input value={url} onChange={handleUrlChange} />\n      <button type=\"submit\">save</button>\n      <p>{user.username} logged in</p>\n    </form>\n  )\n  const addBlog = e => {\n    e.preventDefault()\n    const blog = {\n      title: newTitle,\n      url: url,\n      author: author,\n    }\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n      setNewTitle('')\n    })\n  }\n  const handleTitleChange = e => {\n    console.log(e.target.value)\n    setNewTitle(e.target.value)\n  }\n  //hooks\n  const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [author, setNewAuthor] = useState('')\n  const [url, setNewUrl] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [user, setUser] = useState(null)\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs))\n  }, [])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  })\n  const handleLogin = async e => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <div>\n      <h2>blogs</h2>\n      {user === null && loginForm()}\n      {user !== null && BlogForm()}\n      {blogs.map(blog => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
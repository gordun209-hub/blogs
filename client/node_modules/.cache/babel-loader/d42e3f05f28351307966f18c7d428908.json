{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Togglable from './components/Togglable';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport BlogForm from './components/BlogForm';\nimport loginService from './services/login.js';\nimport LoginForm from './components/loginform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LOGINFORM\n  const loginForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"log in\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this); // BLOGFORM\n\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new blog\",\n    children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setUser(null);\n        localStorage.clear();\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this); //ADDING BLOG FUNCTION\n\n\n  const addBlog = blog => {\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n    });\n  }; //hooks\n\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null); //fetching blogs\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []); //save token to storage\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), blogForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qyugzfz3WXPoYFcEAWmLWvTtk4E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js"],"names":["React","useEffect","useState","Togglable","Blog","blogService","BlogForm","loginService","LoginForm","App","loginForm","username","password","target","setUsername","value","setPassword","handleLogin","blogForm","addBlog","setUser","localStorage","clear","blog","create","then","returnedBlog","setBlogs","blogs","concat","user","getAll","loggedUserJSON","window","getItem","JSON","parse","setToken","token","e","preventDefault","login","setItem","stringify","err","console","log","name","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Togglable from './components/Togglable'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login.js'\nimport LoginForm from './components/loginform'\nconst App = () => {\n  // LOGINFORM\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n  // BLOGFORM\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new blog\">\n      <BlogForm createBlog={addBlog} />\n      <button\n        onClick={() => {\n          setUser(null)\n          localStorage.clear()\n        }}\n      >\n        Logout\n      </button>\n    </Togglable>\n  )\n  //ADDING BLOG FUNCTION\n  const addBlog = blog => {\n    blogService.create(blog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n    })\n  }\n  //hooks\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //fetching blogs\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs))\n  }, [])\n  //save token to storage\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          {blogForm()}\n        </div>\n      )}\n      {blogs.map(blog => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
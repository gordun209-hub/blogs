{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport usersService from '../../services/users';\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: [],\n  reducers: {\n    initUsers: (state, action) => {\n      return action.payload;\n    },\n    currentUser: (state, action) => {\n      return state.map(user => {\n        if (user.id === action.payload.id) {\n          return { ...user,\n            ...action.payload\n          };\n        }\n\n        return user;\n      });\n    }\n  }\n});\nexport const initializeUsers = () => async dispatch => {\n  const users = await usersService.getAll();\n  dispatch(usersSlice.actions.initUsers(users));\n};\nexport default usersSlice.reducer;\nexport const {\n  initUsers,\n  currentUser\n} = usersSlice.actions;","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/features/users/usersSlice.js"],"names":["createSlice","usersService","usersSlice","name","initialState","reducers","initUsers","state","action","payload","currentUser","map","user","id","initializeUsers","dispatch","users","getAll","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOA,MAAM,CAACC,OAAd;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACvB,YAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACC,OAAP,CAAeI,EAA/B,EAAmC;AACjC,iBAAO,EACL,GAAGD,IADE;AAEL,eAAGJ,MAAM,CAACC;AAFL,WAAP;AAID;;AACD,eAAOG,IAAP;AACD,OARM,CAAP;AASD;AAdO;AAHmB,CAAD,CAA9B;AAoBA,OAAO,MAAME,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrD,QAAMC,KAAK,GAAG,MAAMf,YAAY,CAACgB,MAAb,EAApB;AACAF,EAAAA,QAAQ,CAACb,UAAU,CAACgB,OAAX,CAAmBZ,SAAnB,CAA6BU,KAA7B,CAAD,CAAR;AACD,CAHM;AAIP,eAAed,UAAU,CAACiB,OAA1B;AACA,OAAO,MAAM;AAAEb,EAAAA,SAAF;AAAaI,EAAAA;AAAb,IAA6BR,UAAU,CAACgB,OAA9C","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport usersService from '../../services/users'\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: [],\n  reducers: {\n    initUsers: (state, action) => {\n      return action.payload\n    },\n    currentUser: (state, action) => {\n      return state.map(user => {\n        if (user.id === action.payload.id) {\n          return {\n            ...user,\n            ...action.payload,\n          }\n        }\n        return user\n      })\n    },\n  },\n})\nexport const initializeUsers = () => async dispatch => {\n  const users = await usersService.getAll()\n  dispatch(usersSlice.actions.initUsers(users))\n}\nexport default usersSlice.reducer\nexport const { initUsers, currentUser } = usersSlice.actions"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogsService from '../../services/blogs';\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    initBlogs: (state, action) => {\n      return action.payload;\n    },\n    addBlog: (state, action) => {\n      state.concat(action.payload);\n    },\n\n    setBlogs(state, action) {\n      state.push(action.payload);\n    }\n\n  }\n});\nexport const createBlog = (title, author, url) => async dispatch => {\n  const blog = await blogsService.create({\n    title,\n    author,\n    url\n  });\n  dispatch(addBlog(blog));\n};\nexport const {\n  addBlog,\n  setBlogs,\n  setError,\n  initBlogs\n} = blogsSlice.actions;\nexport default blogsSlice.reducer;\nexport const initializeBlogs = () => async dispatch => {\n  try {\n    const blogs = await blogsService.getAll();\n    dispatch(initBlogs(blogs));\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/features/blogs/blogsSlice.js"],"names":["createSlice","blogsService","blogsSlice","name","initialState","reducers","initBlogs","state","action","payload","addBlog","concat","setBlogs","push","createBlog","title","author","url","dispatch","blog","create","setError","actions","reducer","initializeBlogs","blogs","getAll","error","console"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOA,MAAM,CAACC,OAAd;AACD,KAHO;AAIRC,IAAAA,OAAO,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACC,OAApB;AACD,KANO;;AAORG,IAAAA,QAAQ,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACM,IAAN,CAAWL,MAAM,CAACC,OAAlB;AACD;;AATO;AAHmB,CAAD,CAA9B;AAiBA,OAAO,MAAMK,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,GAAhB,KAAwB,MAAMC,QAAN,IAAkB;AAClE,QAAMC,IAAI,GAAG,MAAMlB,YAAY,CAACmB,MAAb,CAAoB;AAAEL,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAApB,CAAnB;AACAC,EAAAA,QAAQ,CAACR,OAAO,CAACS,IAAD,CAAR,CAAR;AACD,CAHM;AAKP,OAAO,MAAM;AAAET,EAAAA,OAAF;AAAWE,EAAAA,QAAX;AAAqBS,EAAAA,QAArB;AAA+Bf,EAAAA;AAA/B,IAA6CJ,UAAU,CAACoB,OAA9D;AACP,eAAepB,UAAU,CAACqB,OAA1B;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAON,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMO,KAAK,GAAG,MAAMxB,YAAY,CAACyB,MAAb,EAApB;AACAR,IAAAA,QAAQ,CAACZ,SAAS,CAACmB,KAAD,CAAV,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,CAPM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogsService from '../../services/blogs'\n\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    initBlogs: (state, action) => {\n      return action.payload\n    },\n    addBlog: (state, action) => {\n      state.concat(action.payload)\n    },\n    setBlogs(state, action) {\n      state.push(action.payload)\n    },\n  },\n})\n\n\nexport const createBlog = (title, author, url) => async dispatch => {\n  const blog = await blogsService.create({ title, author, url })\n  dispatch(addBlog(blog))\n}\n\nexport const { addBlog, setBlogs, setError, initBlogs } = blogsSlice.actions\nexport default blogsSlice.reducer\n\n\nexport const initializeBlogs = () => async (dispatch) => {\n  try {\n    const blogs = await blogsService.getAll()\n    dispatch(initBlogs(blogs))\n  } catch (error) {\n    console.error(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Togglable from './components/Togglable';\nimport Blog from './components/Blog';\nimport { flatten, pluck } from 'ramda';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/loginform';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createBlog, initializeBlogs } from './Features/Blogs/blogsSlice';\nimport { initializeUsers, setUsers } from './Features/Users/usersSlice';\nimport { initializeUser, loginFailure, loginUser, logout } from './Features/Users/authUserSlice';\nimport Users from './components/Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const findLoggedInUser = user && users.filter(userz => userz.username === user.username);\n  const loggedInuserBlogs = user && flatten(pluck('blogs')(findLoggedInUser));\n  const [userBlogs, setUserBlogs] = useState(loggedInuserBlogs);\n  const user = useSelector(state => state.authUser.user);\n  const users = useSelector(state => state.users);\n\n  const addBlog = blog => {\n    dispatch(createBlog(blog));\n    setUserBlogs(userBlogs.concat(blog));\n  }; //---------------------------hooks---------------- //\n\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); //fetching blogs\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n    dispatch(initializeUsers());\n    dispatch(initializeUser());\n  }, [dispatch]); // ----------------------------------------------------------------//\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch(loginUser(username, password));\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      dispatch(loginFailure(err));\n    }\n  }; // LOGINFORM\n\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"log in\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this); // BLOGFORM// lopgut\n\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new blog\",\n    children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        localStorage.clear();\n        dispatch(logout());\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this); // user users\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      class: 'w3-highway-schoolbus'\n    },\n    children: [user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), blogForm(), ' ', userBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u9WphreX6gtSVugGijRLP2yDU1k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/App.js"],"names":["React","useEffect","useState","Togglable","Blog","flatten","pluck","BlogForm","LoginForm","Button","useSelector","useDispatch","createBlog","initializeBlogs","initializeUsers","setUsers","initializeUser","loginFailure","loginUser","logout","Users","App","dispatch","findLoggedInUser","user","users","filter","userz","username","loggedInuserBlogs","userBlogs","setUserBlogs","state","authUser","addBlog","blog","concat","setUsername","password","setPassword","handleLogin","e","preventDefault","err","loginForm","target","value","blogForm","localStorage","clear","class","display","name","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Togglable from './components/Togglable'\nimport Blog from './components/Blog'\nimport { flatten, pluck } from 'ramda'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/loginform'\nimport { Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createBlog, initializeBlogs } from './Features/Blogs/blogsSlice'\nimport { initializeUsers, setUsers } from './Features/Users/usersSlice'\nimport {\n  initializeUser,\n  loginFailure,\n  loginUser,\n  logout,\n} from './Features/Users/authUserSlice'\nimport Users from './components/Users'\nconst App = () => {\n  const dispatch = useDispatch()\n  const findLoggedInUser =\n    user && users.filter(userz => userz.username === user.username)\n  const loggedInuserBlogs = user && flatten(pluck('blogs')(findLoggedInUser))\n\n  const [userBlogs, setUserBlogs] = useState(loggedInuserBlogs)\n  const user = useSelector(state => state.authUser.user)\n  const users = useSelector(state => state.users)\n  const addBlog = blog => {\n    dispatch(createBlog(blog))\n    setUserBlogs(userBlogs.concat(blog))\n  }\n  //---------------------------hooks---------------- //\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  //fetching blogs\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n    dispatch(initializeUser())\n  }, [dispatch])\n  // ----------------------------------------------------------------//\n  const handleLogin = async e => {\n    e.preventDefault()\n    try {\n      dispatch(loginUser(username, password))\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      dispatch(loginFailure(err))\n    }\n  }\n  // LOGINFORM\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n  // BLOGFORM// lopgut\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new blog\">\n      <BlogForm createBlog={addBlog} />\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n          localStorage.clear()\n          dispatch(logout())\n        }}\n      >\n        Logout\n      </Button>\n    </Togglable>\n  )\n\n  // user users\n\n  return (\n    <div style={{ class: 'w3-highway-schoolbus' }}>\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <div style={{ display: 'flex' }}>\n            <p>{user.name} logged in</p>\n          </div>\n          {blogForm()}{' '}\n          {userBlogs.map(blog => (\n            <Blog key={blog.id} blog={blog} />\n          ))}\n        </div>\n      )}\n      <Users />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
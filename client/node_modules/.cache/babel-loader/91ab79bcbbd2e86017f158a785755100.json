{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../../services/blogs';\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    addBlog: (state, action) => {\n      state.concat(action.payload.content);\n    },\n    setBlogs: (state, action) => {\n      return action.payload;\n    },\n    deleteBlog: (state, action) => {\n      state.splice(action.payload, 1);\n    }\n  }\n});\nexport const initializeBlogs = () => async dispatch => {\n  const blogs = await blogService.getAll();\n  dispatch(setBlogs(blogs));\n};\nexport const createNewBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content);\n    dispatch(addBlog(blog));\n  };\n};\nexport const deleteBlogbyId = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch(deleteBlog(id));\n  };\n};\nexport const {\n  addBlog,\n  setBlogs,\n  deleteBlog\n} = blogsSlice.actions;\nexport default blogsSlice.reducer;","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/Features/Blogs/blogsSlice.js"],"names":["createSlice","blogService","blogsSlice","name","initialState","reducers","addBlog","state","action","concat","payload","content","setBlogs","deleteBlog","splice","initializeBlogs","dispatch","blogs","getAll","createNewBlog","blog","create","deleteBlogbyId","id","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACE,MAAN,CAAaD,MAAM,CAACE,OAAP,CAAeC,OAA5B;AACD,KAHO;AAIRC,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOA,MAAM,CAACE,OAAd;AACD,KANO;AAORG,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACO,MAAN,CAAaN,MAAM,CAACE,OAApB,EAA6B,CAA7B;AACD;AATO;AAHmB,CAAD,CAA9B;AAgBA,OAAO,MAAMK,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrD,QAAMC,KAAK,GAAG,MAAMhB,WAAW,CAACiB,MAAZ,EAApB;AACAF,EAAAA,QAAQ,CAACJ,QAAQ,CAACK,KAAD,CAAT,CAAR;AACD,CAHM;AAIP,OAAO,MAAME,aAAa,GAAGR,OAAO,IAAI;AACtC,SAAO,MAAMK,QAAN,IAAkB;AACvB,UAAMI,IAAI,GAAG,MAAMnB,WAAW,CAACoB,MAAZ,CAAmBV,OAAnB,CAAnB;AACAK,IAAAA,QAAQ,CAACV,OAAO,CAACc,IAAD,CAAR,CAAR;AACD,GAHD;AAID,CALM;AAMP,OAAO,MAAME,cAAc,GAAGC,EAAE,IAAI;AAClC,SAAO,MAAMP,QAAN,IAAkB;AACvB,UAAMf,WAAW,CAACY,UAAZ,CAAuBU,EAAvB,CAAN;AACAP,IAAAA,QAAQ,CAACH,UAAU,CAACU,EAAD,CAAX,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAM;AAAEjB,EAAAA,OAAF;AAAWM,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,IAAoCX,UAAU,CAACsB,OAArD;AACP,eAAetB,UAAU,CAACuB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../../services/blogs'\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    addBlog: (state, action) => {\n      state.concat(action.payload.content)\n    },\n    setBlogs: (state, action) => {\n      return action.payload\n    },\n    deleteBlog: (state, action) => {\n      state.splice(action.payload, 1)\n    },\n  },\n})\n\nexport const initializeBlogs = () => async dispatch => {\n  const blogs = await blogService.getAll()\n  dispatch(setBlogs(blogs))\n}\nexport const createNewBlog = content => {\n  return async dispatch => {\n    const blog = await blogService.create(content)\n    dispatch(addBlog(blog))\n  }\n}\nexport const deleteBlogbyId = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id)\n    dispatch(deleteBlog(id))\n  }\n}\n\nexport const { addBlog, setBlogs, deleteBlog } = blogsSlice.actions\nexport default blogsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}
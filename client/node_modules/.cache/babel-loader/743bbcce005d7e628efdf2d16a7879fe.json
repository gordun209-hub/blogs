{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogsService from '../../services/blogs';\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: {\n    blogs: [],\n    error: null,\n    loading: false\n  },\n  addBlog: (state, action) => {\n    state.push(action.payload);\n  },\n\n  setBlogs(state, action) {\n    state.push(action.payload);\n  }\n\n});\nexport const createBlog = (title, author, url) => async dispatch => {\n  const blog = await blogsService.create({\n    title,\n    author,\n    url\n  });\n  dispatch(addBlog(blog));\n};\nexport const {\n  addBlog,\n  setBlogs,\n  setError\n} = blogsSlice.actions;\nexport default blogsSlice.reducer;\nexport const initializeBlogs = () => async dispatch => {\n  try {\n    const blogs = await blogsService.getAll();\n    dispatch(setBlogs(blogs));\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/home/ali/Vscodecop/FullstackOpen/blogs/client/src/features/blogs/blogsSlice.js"],"names":["createSlice","blogsService","blogsSlice","name","initialState","blogs","error","loading","addBlog","state","action","push","payload","setBlogs","createBlog","title","author","url","dispatch","blog","create","setError","actions","reducer","initializeBlogs","getAll","console"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,KAAK,EAAE,IAFK;AAGZC,IAAAA,OAAO,EAAE;AAHG,GAFe;AAO7BC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,IAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,GAT4B;;AAU7BC,EAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtBD,IAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD;;AAZ4B,CAAD,CAA9B;AAiBA,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,GAAhB,KAAwB,MAAMC,QAAN,IAAkB;AAClE,QAAMC,IAAI,GAAG,MAAMlB,YAAY,CAACmB,MAAb,CAAoB;AAAEL,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAApB,CAAnB;AACAC,EAAAA,QAAQ,CAACV,OAAO,CAACW,IAAD,CAAR,CAAR;AACD,CAHM;AAKP,OAAO,MAAM;AAAEX,EAAAA,OAAF;AAAWK,EAAAA,QAAX;AAAqBQ,EAAAA;AAArB,IAAkCnB,UAAU,CAACoB,OAAnD;AACP,eAAepB,UAAU,CAACqB,OAA1B;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAON,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMb,KAAK,GAAG,MAAMJ,YAAY,CAACwB,MAAb,EAApB;AACAP,IAAAA,QAAQ,CAACL,QAAQ,CAACR,KAAD,CAAT,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdoB,IAAAA,OAAO,CAACpB,KAAR,CAAcA,KAAd;AACD;AACF,CAPM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogsService from '../../services/blogs'\n\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState: {\n    blogs: [],\n    error: null,\n    loading: false,\n  },\n  addBlog: (state, action) => {\n    state.push(action.payload)\n  },\n  setBlogs(state, action) {\n    state.push(action.payload)\n  },\n\n})\n\n\nexport const createBlog = (title, author, url) => async dispatch => {\n  const blog = await blogsService.create({ title, author, url })\n  dispatch(addBlog(blog))\n}\n\nexport const { addBlog, setBlogs, setError } = blogsSlice.actions\nexport default blogsSlice.reducer\n\n\nexport const initializeBlogs = () => async (dispatch) => {\n  try {\n    const blogs = await blogsService.getAll()\n    dispatch(setBlogs(blogs))\n  } catch (error) {\n    console.error(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}